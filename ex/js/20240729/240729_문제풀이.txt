-------------------------------
1장_1
-------------------------------
1. 문장
2. 프로그램

3. 키워드
4. 식별자
5. Boolean
6. true
7. false
8. false
9. 변수
10. 상수
11. const
12. let
13. typeof
14. NaN


-------------------------------
1장_2
------------------------------- 
2. 
2_01) 0
2_02) 0
2_03) 0
2_04) x
2_05) 0
2_06) x
2_07) x   
2_08) 0
2_09) x
2_10) 0
2_11) x

3. 4
4. ''
5. 4
6. 2
7. 325,52273,52273,52273
8. 30!!!!

-------------------------------
2장_2
-------------------------------
9. TypeError: Assignment to constant variable.
    at Object.<anonymous> (C:\shjung\pythonExam\ex\js\jsex1.js:192:19)
    at Module._compile (node:internal/modules/cjs/loader:1358:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)
    at Module.load (node:internal/modules/cjs/loader:1208:32)
    at Module._load (node:internal/modules/cjs/loader:1024:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)
    at node:internal/main/run_main_module:28:49

-------------------------------
3장_1
-------------------------------
1.
_01. hours > 12
_02. number % 2 != 0
_03. number % 2 == 0
_04. true (문장실행) , false (문장무시)

2.
_01. 0
_02. x
_03. 0
_04. 0
_05. 0

3. 4
4. 3
5. 1
6. 4 
7. 없음(빈줄)

-------------------------------
3장_2
-------------------------------
8. if(x >10 && x <20) {
    console.log("조건에 맞습니다.");
}

9.
let level = 1; 
switch(level) {
    case 1:
        console.log("수강해야 하는 전공 학점: 12학점");    
        break;
    case 2:
        console.log("수강해야 하는 전공 학점: 18학점");    
        break;
    case 3:
        console.log("수강해야 하는 전공 학점: 10학점");    
        break;
    case 4:
        console.log("수강해야 하는 전공 학점: 18학점");    
        break;
}

-------------------------------
4장_1
-------------------------------
4_01_1. 배열
4_01_2. 요소
4_01_3. undefined
4_01_4. 무한루프
4_01_5. break
4_01_6. continue
4_01_7. scope
4_01_8. var
4_01_9. 스코프 체이닝

4_02_1. 0
4_02_2. x
4_02_3. x
4_02_4. x
4_02_5. x
4_02_6. 0
4_02_7. x
4_02_8. x
4_02_9. x
4_02_10. x

-------------------------------
4장_2
-------------------------------
4_3. 2
4_4. 4
4_5. 3
4_6.
    cnt = 0
    while(true) {
        if(cnt >= 10) {
            break;
        }
        console.log("출력2");
        cnt++;
    }
4_7. 
    출력
    출력
    출력
    출력
    출력
    출력
    출력
    출력
    출력
    출력

4_8.
    output = "";
    for (let i=0 ; i<9 ;i ++) {
        result = 2*i+1;
        for (let j=0 ; j<16 ;j ++) {
            if(j == result) {
                space = (15-result)/2; 
                for (let x = 0; x < space; x++) {
                    output += " ";
                }
                for (let y = 0; y < j; y++) {
                    output += "*";    
                }     
            }
            else {
                continue;
            }        
        } 
        output += "\n";
    }
    console.log(output);  

4_9.  
    let array = [52, 273, 32, 93, 103];
    for(let element in array) {
        console.log(array[element]);
    }
-------------------------------
4장_3
-------------------------------
4_3_10.
    let array = [273,52,103,57,271];
    let min = Number.MAX_VALUE;
    let max = Number.MIN_VALUE;

    if(array.length > 0) {
        mid = ((array.length/2) > 2)? Number(array.length/2): array.length;
        mid = Math.floor(mid); 
        // job1 
        for(let i = 0; i < mid; i++) {
            if (i == 0) {
                max = array[i];
                min = array[i]; 
            }
            else { 
                if(max < array[i]) {
                    max = array[i]; 
                }
                if(min > array[i]) {
                    min = array[i]; 
                }
            }
        }       
        // job2
        for(let j = mid; j < array.length; j++) {
            if(max < array[j]) {
                max = array[j]; 
            }
            if(min > array[j]) {
                min = array[j]; 
            }
        } 
    } 
    console.log(`가장 큰 수: ${max}`);
    console.log(`가장 작은 수: ${min}`);

4_3_11.
  
let array = [52,71,32,103,273,93];   

function merge(leftArr, rightArr) {
    const sortedArr = [];
    let l = 0;
    let r = 0;
  
    while (l < leftArr.length && r < rightArr.length) {
      if (leftArr[l] <= rightArr[r]) {
        sortedArr.push(leftArr[l]);
        l++;
      } else {
        sortedArr.push(rightArr[r]);
        r++;
      }
    } 
    while (l < leftArr.length) {
      sortedArr.push(leftArr[l]);
      l++;
    } 
    while (r < rightArr.length) {
      sortedArr.push(rightArr[r]);
      r++;
    } 
    return sortedArr;
  }
  
  function mergeSort(arr) {
    if (arr.length === 1) {
      return arr;
    }  
    const mid = Math.ceil(arr.length / 2);  
    const leftArr = arr.slice(0, mid);
    const rightArr = arr.slice(mid);  
    return merge(mergeSort(leftArr), mergeSort(rightArr));
  }


  console.log(`${mergeSort(array)}`);